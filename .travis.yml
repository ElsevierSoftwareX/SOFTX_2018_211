language: cpp

env:
  global:
   - secure: "ftdZRxt+ICMQ3yerJfDr8O42/E3h4zyq5L0SA//ZZnsF788ohIb9giNYlzN418jZat9MOEEzcmRP6gzH0Ilj2OF5wQ2vZFzPaF6sQ/BmMVqVm2f/LcNDtxqwTc8LfxS9Qy660wbSMjcCDRYHyZR5B1977DNa+ODyoeImRm/zQWmJVEbknHoig6/qbAykj+rz4BIT1cYR/nqEY4z6YKrInOf1r89VcvdIaD0Rgw39At1f9NubBvFOuMRoJu7XBpAiDTAkG5ceVUhsb14nBwR4f8hO9pWnVylfO3wVCKZF3YwpbgT0yj3hxZEH9wjr9dKlyMf5Psryi8CGN/2F7WNBtHjHJGPScAOcoe30Jh/7FkTfh1P2jPh8mOM9RjDJE7fX3ShQFA1bCCKZmYU/RzgGSQHS2GCK4SqpPvmidBka1ZJ/o5OEzYhKtRag39Qx5EmwLkqGiYWG0l7adeHlihP2m5gNth8ftksJzi48Lxy9cQaXmRahFjEPUY2a4rIkHN1MrA7Z4EvPVcCikurlLLRzxdqtJVb1AzDEdOSMtqeIcvbpZEzNNj7tjKo6SQFulF7s4kDJqYNjFEoSmCUKdGjqfwKT4+odPmObyZTv9828T9wU5yTglioqpwUwVhiWWxI8NPIkKrGriWseoI9uaxC+jAvgEYTh7XJNL6q3OQs9IwM="

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - lcov
          update:
            - true
        coverity_scan:
          project:
            name: "evoplex/evoplex"
            description: "Evoplex is a platform for agent-based modeling on networks."
          build_command_prepend: cov-configure --comptype gcc --compiler gcc-4.8 --template && cmake ..
          build_command: make -j5
          branch_pattern: coverity_scan
          notification_email: evoplexorg@gmail.com
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
         - COVERAGE_ENABLED=true

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
          update:
            - true
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
          update:
            - true
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
          update:
            - true
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
          update:
            - true
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
            - libc++-dev
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - libc++-dev
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: osx
      osx_image: xcode8.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.1
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

before_install:
  - eval "${MATRIX_EVAL}"

  - if [[ "$TRAVIS_BRANCH" == "coverity_scan" ]]; then
      if [[ "$COVERAGE_ENABLED" == true ]]; then
        echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca- ;
      else
        export SKIP_BUILD=true;
      fi;
    fi

  - if [[ "$SKIP_BUILD" != true ]]; then
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        wget -q -O qt.zip https://github.com/evoplex/evoplex-data/releases/download/qt5.9.5/linux_qt5.9.5.zip;
        unzip -qq qt.zip -d qt;
        export PATH=`pwd`/qt/5.9.5/gcc_64/bin:$PATH;
        export QT_PLUGIN_PATH=`pwd`/qt/5.9.5/gcc_64/plugins;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        wget -q -O qt.zip https://github.com/evoplex/evoplex-data/releases/download/qt5.9.5/macos_qt5.9.5.zip;
        unzip -qq qt.zip -d qt;
        export PATH=`pwd`/qt/5.9.5/clang_64/bin:$PATH;
        export QT_PLUGIN_PATH=`pwd`/qt/5.9.5/clang_64/plugins;
      fi
    fi

#install:

before_script:
  - mkdir build && cd build

  - if [[ "$SKIP_BUILD" != true ]]; then
      if [[ "$COVERAGE_ENABLED" == true ]]; then
        export COVERALLS_SERVICE_NAME=travis-ci;
        export COVERALLS_REPO_TOKEN=vLsFADbYfaOddNs4afYumdHwwxOWC129z;
        cmake -DCODE_COVERAGE=ON .. ;
      else
        cmake .. ;
      fi
    fi

script:
  # split the ifs to make it looks better on travis-ci webpage
  - if [[ "$SKIP_BUILD" != true ]]; then make -j5 ; fi

  - if [[ "$SKIP_BUILD" != true ]]; then sudo make install -j5 ; fi

  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      make -j5 evoplex_coverage ;
    fi

  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      make coveralls ;
    fi

  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      ctest --output-on-failure ;
    fi

after_success:
  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      cd ${TRAVIS_BUILD_DIR}/build;
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info '/usr/*' --output-file coverage.info;
      lcov --list coverage.info;
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
    fi

notifications:
  email:
    recipients:
      - evoplexorg@gmail.com
    on_success: change
    on_failure: always
