language: cpp

env:
  global:
    - secure: "SPftPP1q9lWyMuGHWiNbGFkz9N7CfCCRZsztGU7IOHp/yDJpzTNFUttsr/t6KE+P+PXEVHokJfYK7CGMFSEi8AvagtPQ3ocrzypjwckHLZ+umJkPZpMJe9Ttv+3dFs6dPfOt38eedsYw/9Mwafh8ILNg8NwgWtoF1V5im1p14GHV7hOL6S+s5CWojlGawJNekyLKRA+rlzcsIzTlAfnM2bpOEhMOjfh4mrJf9AsQ8mo4o4JIwtuOuXi7a3NRQKdZpaP0KR/QK7X1xpekt/pjWXisj5XwE9ay7sZjSGoREsCGOOYEkxqd/lhZhhCXG51/jnI0/wtS/eLZe32jZgAKQwCF6XRTJCsJiIiHSqvW2I/YJfYtvQdkSwVcWgL0xP78MYfeMsLiYW0QF16DRFxasxcRt0myCX1cbVuHFYQTjcvVD0sQtdizqaWMrQyjdVrw/NU+oHYOnlZhNyAEsd+gIedu37RpD061Iyna5m1+oEANwMCa1Za6Rwcpq7kw/z3oh7pCnEp7PuSoHk1fTjvEC3AUfQDF0TVRdGoO9yr6iy0TObGoKHeCFNbKskdi84sddQSc3jnt6XrSxJLlwsSQaD/QXwl7w0FHhPM18TUHVXlFdcZDd/WuMFjaEZIaPv9sqRAvydWzhrv3aRKKGIZYh7/wpQAsuEWTxO6u+OffgqI="

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - lcov
          update:
            - true
        coverity_scan:
          project:
            name: "evoplex/evoplex"
            description: "Evoplex is a multi-agent system for networks."
          build_command_prepend: cov-configure --comptype gcc --compiler gcc-4.8 --template && cmake ..
          build_command: make -j5
          branch_pattern: coverity_scan
          notification_email: evoplexmas@gmail.com
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
         - COVERAGE_ENABLED=true

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
          update:
            - true
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
          update:
            - true
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
          update:
            - true
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
          update:
            - true
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: osx
      osx_image: xcode7.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode8.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

before_install:
  - eval "${MATRIX_EVAL}"

  - if [[ "$TRAVIS_BRANCH" == "coverity_scan" ]]; then
      if [[ "$COVERAGE_ENABLED" == true ]]; then
        echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca- ;
      else
        export SKIP_BUILD=true;
      fi;
    fi

  - if [[ "$SKIP_BUILD" != true ]]; then
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        mkdir qt5;
        wget -q -O qt5.9.1.zip https://github.com/evoplex/evoplex-data/releases/download/data/qt5.9.1.zip;
        unzip -qq qt5.9.1.zip -d qt;
        export PATH=`pwd`/qt/5.9.1/gcc_64/bin:$PATH;
        export QT_PLUGIN_PATH=`pwd`/qt/5.9.1/gcc_64/plugins;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew update > /dev/null;
        brew upgrade > /dev/null;
        brew install qt;
        export PATH="/usr/local/opt/qt/bin:$PATH";
      fi
    fi

#install:

before_script:
  - mkdir build && cd build

  - if [[ "$SKIP_BUILD" != true ]]; then
      if [[ "$COVERAGE_ENABLED" == true ]]; then
        cmake -DTESTS=ON .. ;
      else
        cmake .. ;
      fi
    fi

script:
  # split the ifs to make it looks better on travis-ci webpage
  - if [[ "$SKIP_BUILD" != true ]]; then make -j5 ; fi

  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      make -j5 evoplex_coverage ;
    fi

  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      make coveralls ;
    fi

  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      ctest --output-on-failure ;
    fi

after_success:
  - if [[ "$SKIP_BUILD" != true && "$COVERAGE_ENABLED" == true ]]; then
      cd ${TRAVIS_BUILD_DIR}/build;
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info '/usr/*' --output-file coverage.info;
      lcov --list coverage.info;
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
    fi

notifications:
  email:
    recipients:
      - evoplexmas@gmail.com
    on_success: change
    on_failure: always
